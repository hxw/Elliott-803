COGS FOR 803 ALGOL'
BEGIN
   COMMENT 27-MAR-2003'
   INTEGER LIM, I, M, N, Z'
   PUNCH(3)'
   PRINT ££LL?PROGRAM COMPILED OK£LL??'
   READ LIM, I, M, N, Z'
   PRINT £LIM=?,SAMELINE, LIM, £, I=?,I,£, M=?,M,£, N=?, N, £, Z=?, Z, ££L??'

   BEGIN
      INTEGER J, K, L, R, XA, XB, XC' BOOLEAN F, G'
      INTEGER ARRAY P, Q, T(1:M), A, B, C, W, ZERO(1:N)'

      INTEGER PROCEDURE MOD(X, Y)' VALUE X, Y' INTEGER X, Y'
         MOD := X - (X DIV Y) * Y'

      PROCEDURE ADDI(A, B, C)' INTEGER ARRAY A, B, C'
      BEGIN
         INTEGER J, CARRY, SUM'
         CARRY := 0'
         FOR J:= N STEP -1 UNTIL 1 DO
         BEGIN
            SUM := B(J) + C(J) + CARRY'
            IF SUM GREQ LIM THEN
            BEGIN
               A(J) := SUM - LIM'
               CARRY := 1
            END
            ELSE
            BEGIN
               A(J) := SUM'
               CARRY := 0
            END
         END
      END OF ADDI'

      PROCEDURE SUBI(A, B, C)' INTEGER ARRAY A,B,C'
      BEGIN
         INTEGER J, BORROW, DIFF'
         BORROW := 0'
         FOR J := N STEP -1 UNTIL 1 DO
         BEGIN
            DIFF := B(J) - C(J) - BORROW'
            IF DIFF LESS 0 THEN
            BEGIN
               A(J) := DIFF + LIM'
               BORROW := 1
            END
            ELSE
            BEGIN
               A(J) := DIFF'
               BORROW := 0
            END
         END
      END OF SUBBI'

      PROCEDURE MPYI(A, X)' VALUE X'
      INTEGER ARRAY A' INTEGER X'
      BEGIN
         INTEGER PROD, J, CARRY'
         COMMENT PRINT £MPYI?,SAMELINE,X'
         CARRY := 0'
         FOR J := N STEP -1 UNTIL 1 DO
         BEGIN
            PROD := A(J) * X + CARRY'
            CARRY := PROD DIV LIM'
            A(J) := MOD(PROD, LIM)
         END'
      END OF MPYI'

      PROCEDURE DIVI(A, X)' VALUE X'
      INTEGER ARRAY A' INTEGER X'
      BEGIN
         INTEGER J, QUOT, REM'
         REM := 0'
         FOR J := 1 STEP 1 UNTIL N DO
         BEGIN
            QUOT := (REM * LIM + A(J)) DIV X'
            REM := MOD(REM * LIM + A(J), X)'
            A(J) := QUOT
         END'
      END OF DIVI'

      PROCEDURE PUTI(A)' INTEGER ARRAY A'
      BEGIN
         INTEGER J'
         PRINT ££L??'
         FOR J := 1 STEP 1 UNTIL N DO
           PRINT SAMELINE, DIGITS(6), A(J)'
      END OF PUTI'

      PROCEDURE GETI(A)'
      INTEGER ARRAY A'
      BEGIN
         INTEGER J'
         FOR J := 1 STEP 1 UNTIL N DO
           READ A(J)'
      END OF GETI'

      PROCEDURE RESID(XA, A, P)'
      VALUE P' INTEGER XA, P' INTEGER ARRAY A'
      BEGIN
         PRINT ££L?P=?,SAMELINE,P'
         PUTI(W)'
         PUTI(A)'
         ADDI(W,A,ZERO)'
         PUTI(W)'
         DIVI(W,P)'
         PUTI(W)'
         MPYI(W,P)'
         PUTI(W)'
         SUBI(W,A,W)'
         PUTI(W)'
         XA := W(N)+LIM*W(N-1)'
         PRINT ££L?XA=?,SAMELINE,XA'

      END OF RESID'

      BOOLEAN PROCEDURE SQ(X)' VALUE X' INTEGER X'
      BEGIN
         INTEGER H, V' BOOLEAN F'
         H := -1' F := FALSE' V := P(J) DIV 2'
         FOR H := H+1 WHILE (NOT F AND (H LESSEQ V)) DO
            IF MOD(H*H, P(J)) = X THEN F := TRUE'
         SQ := F
      END OF SQ'

      COMMENT PROGRAM START'
      PUNCH(3)'        COMMENT SET ALL OUTPUT TO ONLINE T/P
      FOR J := 1 STEP 1 UNTIL N DO
      BEGIN
         ZERO(J) := 0
      END'
      GETI(A)' GETI(B)' GETI(C)'
      PUTI(A)' PUTI(B)' PUTI(C)'
      PRINT ££L2?    3    5?'
      P(1) := 3' P(2) := 5' Q(1) := 0' Q(2) := 3'
      FOR K := 3 STEP 1 UNTIL M DO
      BEGIN
         P(K) := P(K-1) + 2' F := FALSE' J := 0'
         FOR J := J+1 WHILE ((NOT F) AND (J LESS K)) DO
         BEGIN
            IF MOD(P(K), P(J)) = 0 THEN F := TRUE'
            IF F THEN
            BEGIN
               P(K) := P(K) + 2'
               J := 0'
               F := FALSE
            END
         END'
         Q(K) := Q(K-1) + P(K-1)'
         IF MOD(K, 10) = 1 THEN
            PRINT ££L??'
         PRINT DIGITS(4), SAMELINE, P(K)
      END OF PRIME SET UP'

      BEGIN
         BOOLEAN ARRAY S(0:Q(M)+P(M)-1)'
         FOR J := 1 STEP 1 UNTIL M DO
         BEGIN
            L := T(J) := 0'
            RESID(XA,A,P(J))'
            RESID(XB,B,P(J))'
            RESID(XC,C,P(J))'
            FOR K := 0 STEP 1 UNTIL P(J) - 1 DO
            BEGIN
               IF MOD(L, 70) = 0 THEN
            PRINT ££L??'
               L := L + 1'
               G := S(Q(J)+K) := SQ(MOD(MOD(XA*K, P(J)) * K +
                         XB * K + XC, P(J)))'
               IF G AND Z=1 THEN
          PRINT SAMELINE, £T?'
               IF NOT G AND Z=1 THEN
                 PRINT SAMELINE, £F?
            END
         END OF TEETH SET UP'

         PRINT ££L2?START FOR 1000000?'

         R := 0' F := FALSE'
         FOR R := R+1 WHILE NOT F DO
         BEGIN
            G := TRUE'
            FOR J := 1 STEP 1 UNTIL M DO
            BEGIN
               T(J) := T(J) + 1'
               IF T(J) = P(J) THEN T(J) := 0'
               IF G THEN
               BEGIN
                  IF NOT S(Q(J)+T(J)) THEN G := FALSE
               END
            END OF TEETH ON ALL COGS'

            F := G'
            IF MOD(R, I) = 0 THEN
                PRINT R'
            IF G THEN
            BEGIN
                PRINT ££L?X = ?, SAMELINE, R'
            END'
            IF R=1000000 THEN
                PRINT ££L?X = ?, SAMELINE, R, STOP
         END OF R LOOP
      END OF S BLOCK
   END OF A, B, C BLOCK
END'



    100000 10000  30 4 1
00000 09189 47703 02976
00287 72252 88670 21824
00256 52759 65410 64768
